in_mutect_table <- rbind(in_mutect_table, mutect_snvs_table)
}
in_mutect_table$in_mutect[in_mutect_table$in_mutect == TRUE] <- 'Good'
in_mutect_table$in_mutect[in_mutect_table$in_mutect == FALSE] <- 'Bad'
in_mutect_table$in_mutect2[in_mutect_table$in_mutect2 == TRUE] <- 'Good'
in_mutect_table$in_mutect2[in_mutect_table$in_mutect2 == FALSE] <- 'Bad'
in_mutect_table
save(in_mutect_table, file='~/Desktop/in_mutect_tabl.rda')
in_mutect_table
in_mutect_table <- data.frame()
for(i in 1:length(ews_samples)) {
# subset the SNVs to only those in a given sample
known_snvs <- ews_classified_snvs %>% filter(Sample == ews_samples[i])
mutect_snvs <- load(mutect_mutect2_files$mutect[mutect_mutect2_files$sample == ews_samples[i]])
mutect_snvs <- get(mutect_snvs)
mutect_snvs <- create_final_filtered_dataframe(data=mutect_snvs)
mutect_snvs_table <- mutect_snvs %>%
dplyr::select(
snvid
)
mutect_snvs_table$in_mutect <- TRUE
mutect_snvs_table <- left_join(
x = known_snvs %>% dplyr::select(Sample, snvid, Judgement, Comment),
y = mutect_snvs_table,
by = c('snvid')
)
mutect_snvs_table$in_mutect[is.na(mutect_snvs_table$in_mutect)] <- FALSE
mutect2_snvs <- load(mutect_mutect2_files$mutect2[mutect_mutect2_files$sample == ews_samples[i]])
mutect2_snvs <- get(mutect2_snvs)
mutect2_snvs <- create_final_filtered_dataframe(data=mutect2_snvs)
mutect2_snvs_table <- mutect2_snvs %>%
dplyr::select(
snvid
)
mutect2_snvs_table$in_mutect2 <- TRUE
mutect_snvs_table <- left_join(
x = mutect_snvs_table,
y = mutect2_snvs_table,
by = c('snvid')
)
mutect_snvs_table$in_mutect2[is.na(mutect_snvs_table$in_mutect2)] <- FALSE
in_mutect_table <- rbind(in_mutect_table, mutect_snvs_table)
}
in_mutect_table
head(in_mutect_table)
in_mutect_table %>% dplyr::select(Judgement, in_mutect, in_mutect2)
head(in_mutect_table %>% dplyr::select(Judgement, in_mutect, in_mutect2))
in_mutect_table$in_mutect[in_mutect_table$in_mutect == TRUE] <- 'Good'
in_mutect_table$in_mutect[in_mutect_table$in_mutect == FALSE] <- 'Bad'
in_mutect_table$in_mutect2[in_mutect_table$in_mutect2 == TRUE] <- 'Good'
in_mutect_table$in_mutect2[in_mutect_table$in_mutect2 == FALSE] <- 'Bad'
head(in_mutect_table %>% dplyr::select(Judgement, in_mutect, in_mutect2))
head(in_mutect_table)
in_mutect_table$mutect <- 0
in_mutect_table$mutect2 <- 0
head(in_mutect_table)
sessionInfo()
ShlienLab.Core.Filter::add.snvid()
ShlienLab.Core.Filter::add.snvid
mutect_tp <- 0
mutect_fp <- 0
mutect_tn <- 0
mutect_fn <- 0
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_tp = mutect_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_fp = mutect_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_fn = mutect_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_tn = mutect_tn + 1
}
}
mutect_tp
mutect_fp
mutect_tn
mutect_fn
ls()
mutect_tp
in_mutect_table
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_tp = mutect_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_fp = mutect_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_fn = mutect_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_tn = mutect_tn + 1
}
}
mutect_tp <- 0
mutect_fp <- 0
mutect_tn <- 0
mutect_fn <- 0
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_tp = mutect_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_fp = mutect_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_fn = mutect_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_tn = mutect_tn + 1
}
}
mutect_tp
mutect_fp
mutect_fn
mutect_tn
mutect2_tp <- 0
mutect2_fp <- 0
mutect2_tn <- 0
mutect2_fn <- 0
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect2[i] == 'Good') {
mutect2_tp = mutect2_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect2[i] == 'Good') {
mutect2_fp = mutect2_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect2[i] == 'Bad') {
mutect2_fn = mutect2_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect2[i] == 'Bad') {
mutect2_tn = mutect2_tn + 1
}
}
mutect2_tp
mutect2_fp
mutect2_fn
mutect2_tn
dim(in_mutect_table)
38 + 4 + 20 + 48
54 + 30 + 4 + 22
mutect_tp / (mutect_tp + mutect_fn)
mutect_tp <- 0
mutect_fp <- 0
mutect_tn <- 0
mutect_fn <- 0
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_tp = mutect_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_fp = mutect_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_fn = mutect_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_tn = mutect_tn + 1
}
}
mutect_sensitivity <- mutect_tp / (mutect_tp + mutect_fn)
mutect_specificity <- mutect_tn / (mutect_tn + mutect_fp)
mutect2_tp <- 0
mutect2_fp <- 0
mutect2_tn <- 0
mutect2_fn <- 0
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect2[i] == 'Good') {
mutect2_tp = mutect2_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect2[i] == 'Good') {
mutect2_fp = mutect2_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect2[i] == 'Bad') {
mutect2_fn = mutect2_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect2[i] == 'Bad') {
mutect2_tn = mutect2_tn + 1
}
}
mutect2_sensitivity <- mutect_tp / (mutect2_tp + mutect2_fn)
mutect2_specificity <- mutect2_tn / (mutect2_tn + mutect2_fp)
mutect_sensitivity
mutect_specificity
mutect2_specificity
mutect2_sensitivity
mutect2_sensitivity <- mutect2_tp / (mutect2_tp + mutect2_fn)
mutect2_specificity <- mutect2_tn / (mutect2_tn + mutect2_fp)
mutect2_sensitivity
mutect2_specificity
mutect2_tn
mutect2_fp
mutect2_tp
mutect2_fn
in_mutect_table %>% filter(Judgement == 'Good') %>% filter(in_mutect2 == 'Bad')
in_mutect_table$mutect <- NULL
in_mutect_table$mutect2 <- NULL
in_mutect_table %>% filter(Judgement == 'Good') %>% filter(in_mutect2 == 'Bad')
mutect_vs_mutect2_stats <- data.frame(matrix(nrow=2, ncol=2))
mutect_vs_mutect2_stats <- data.frame(matrix(nrow=2, ncol=2))
colnames(mutect_vs_mutect2_stats) <- c('MuTect', 'MuTect2')
rownames(mutect_vs-mutect2_stats) <- c('Specificity', 'Sensitivity')
rownames(mutect_vs_mutect2_stats) <- c('Specificity', 'Sensitivity')
mutect_vs_mutect2_stats['MuTect', 'Specificity'] <- mutect_specificity
mutect_vs_mutect2_stats['MuTect', 'Sensitivity'] <- mutect_sensitivity
mutect_vs_mutect2_stats['MuTect2', 'Specificity'] <- mutect2_specificity
mutect_vs_mutect2_stats['MuTect2', 'Sensitivity'] <- mutect2_sensitivity
mutect_vs_mutect2_stats
mutect_vs_mutect2_stats <- data.frame(matrix(nrow=2, ncol=2))
colnames(mutect_vs_mutect2_stats) <- c('MuTect', 'MuTect2')
rownames(mutect_vs_mutect2_stats) <- c('Specificity', 'Sensitivity')
mutect_vs_mutect2_stats['Specificity', 'MuTect'] <- mutect_specificity
mutect_vs_mutect2_stats['Sensitivity', 'MuTect'] <- mutect_sensitivity
mutect_vs_mutect2_stats['Specificity', 'MuTect2'] <- mutect2_specificity
mutect_vs_mutect2_stats['Sensitivity', 'MuTect2'] <- mutect2_sensitivity
kable(mutect_vs_mutect2_stats)
library(knitr)
kable(mutect_vs_mutect2_stats)
mutect_files <- read.table(
file = '~/local/projects/ewings/docs/mutect_files.txt',
header = TRUE,
as.is = TRUE,
sep = '\t',
quote = "\""
)
mutect_files$sample <- basename(mutect_files$mutect)
mutect_files$sample <- gsub(
x=mutect_files$sample,
pattern='_cfilter_pon.rda',
replacement = ''
)
mutect2_files <- read.table(
file = '~/local/projects/ewings/docs/mutect2_files.txt',
header = TRUE,
as.is = TRUE,
sep = '\t',
quote = "\""
)
mutect2_files$sample <- basename(mutect2_files$mutect2)
mutect2_files$sample <- gsub(
x = mutect2_files$sample,
pattern = '_annotated_filtered_clipped.rda',
replacement = ''
)
mutect_mutect2_files <- dplyr::full_join(
x = mutect_files,
y = mutect2_files,
by = c('sample')
)
ShlienLab.Core.SSM::create_final_filtered_dataframe
library(plyr)
library(dplyr)
library(plotting.general)
library(VennDiagram)
library(ShlienLab.Core.SSM)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
mutect <- ShlienLab.Core.SSM::create_final_filtered_dataframe(data=mutect)
library(plyr)
library(dplyr)
library(devtools)
load_all(pkg='~/local/src/R/ShlienLab.Core.SSM')
library(plotting.general)
library(VennDiagram)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
ShlienLab.Core.Filter::add.snvid
melt(mutect_vs_mutect2_stats)
mutect_tp
mutect_fp
mutect_tn
mutect_fn
library(plyr)
library(dplyr)
library(devtools)
load_all(pkg='~/local/src/R/ShlienLab.Core.SSM')
library(ShlienLab.Core.Filter)
library(plotting.general)
library(VennDiagram)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
mutect_files <- read.table(
file = '~/local/projects/ewings/docs/mutect_files.txt',
header = TRUE,
as.is = TRUE,
sep = '\t',
quote = "\""
)
mutect_files$sample <- basename(mutect_files$mutect)
mutect_files$sample <- gsub(
x=mutect_files$sample,
pattern='_cfilter_pon.rda',
replacement = ''
)
mutect2_files <- read.table(
file = '~/local/projects/ewings/docs/mutect2_files.txt',
header = TRUE,
as.is = TRUE,
sep = '\t',
quote = "\""
)
mutect2_files$sample <- basename(mutect2_files$mutect2)
mutect2_files$sample <- gsub(
x = mutect2_files$sample,
pattern = '_annotated_filtered_clipped.rda',
replacement = ''
)
mutect_mutect2_files <- dplyr::full_join(
x = mutect_files,
y = mutect2_files,
by = c('sample')
)
# running locally we need to localize the mount point
mutect_mutect2_files$mutect <- gsub(
x = mutect_mutect2_files$mutect,
pattern = '/hpf/largeprojects/adam',
replacement = '/Volumes/adam_rodesktop_largep'
)
mutect_mutect2_files$mutect2 <- gsub(
x = mutect_mutect2_files$mutect2,
pattern = '/hpf/largeprojects/adam/projects/icgc_tcga_datasets',
replacement = '/Volumes/adam_rodesktop_icgc'
)
mutect_mutect2_files <- mutect_mutect2_files[!is.na(mutect_mutect2_files$mutect),]
mutect_mutect2_files <- mutect_mutect2_files[!is.na(mutect_mutect2_files$mutect2),]
# create the Venn diagram for each MuTect/MuTect2 pairing
for (i in 1:(nrow(mutect_mutect2_files) - 1)) {
mutect <- load(mutect_mutect2_files$mutect[i])
mutect <- get(mutect)
mutect <- ShlienLab.Core.SSM::create_final_filtered_dataframe(data=mutect)
mutect2 <- load(mutect_mutect2_files$mutect2[i])
mutect2 <- get(mutect2)
mutect2 <- ShlienLab.Core.SSM::create_final_filtered_dataframe(data=mutect2)
title <- paste(sep=' ', "Sample", mutect_mutect2_files$sample[i])
output <- paste(
sep='_',
mutect_mutect2_files$sample[i],
"sample.png"
)
venn.diagram(
x = list(MuTect = mutect$snvid, MuTect2 = mutect2$snvid),
filename = output,
main = title
)
}
classified_snvs <- read.table(
file = '~/Downloads/random_snvs_ewings - random_snvs_ewings.tsv',
header = TRUE,
as.is = TRUE,
sep = '\t'
)
# there are leading and lagging white space in the "Judgement" column, removing these
classified_snvs$Judgement = gsub(
x = classified_snvs$Judgement,
pattern='^\\s+',
replacement='',
perl = TRUE
)
classified_snvs$Judgement = gsub(
x = classified_snvs$Judgement,
pattern='\\s+$',
replacement='',
perl = TRUE
)
ews_samples <- c(
'2213',
'2226',
'2234',
#  '274194',
'2925',
'3071',
'4004',
'4021',
'4022',
'4094',
'4117',
'4120',
'4197',
'4226',
'4311',
'4434',
'4458',
'4459',
'4460',
'4461',
'4462',
#  '4463',
'4464',
'4465'
#  '4466'
)
ews_classified_snvs <- classified_snvs %>% filter(Sample %in% ews_samples)
ews_classified_snvs <- ShlienLab.Core.Filter::add.snvid(data=ews_classified_snvs)
in_mutect_table <- data.frame()
# tumor_name is incorrect, Nathan created a Sample column name
for(i in 1:length(ews_samples)) {
# subset the SNVs to only those in a given sample
known_snvs <- ews_classified_snvs %>% filter(Sample == ews_samples[i])
mutect_snvs <- load(mutect_mutect2_files$mutect[mutect_mutect2_files$sample == ews_samples[i]])
mutect_snvs <- get(mutect_snvs)
mutect_snvs <- create_final_filtered_dataframe(data=mutect_snvs)
mutect_snvs_table <- mutect_snvs %>%
dplyr::select(
snvid
)
mutect_snvs_table$in_mutect <- TRUE
mutect_snvs_table <- left_join(
x = known_snvs %>% dplyr::select(Sample, snvid, Judgement, Comment),
y = mutect_snvs_table,
by = c('snvid')
)
mutect_snvs_table$in_mutect[is.na(mutect_snvs_table$in_mutect)] <- FALSE
mutect2_snvs <- load(mutect_mutect2_files$mutect2[mutect_mutect2_files$sample == ews_samples[i]])
mutect2_snvs <- get(mutect2_snvs)
mutect2_snvs <- create_final_filtered_dataframe(data=mutect2_snvs)
mutect2_snvs_table <- mutect2_snvs %>%
dplyr::select(
snvid
)
mutect2_snvs_table$in_mutect2 <- TRUE
mutect_snvs_table <- left_join(
x = mutect_snvs_table,
y = mutect2_snvs_table,
by = c('snvid')
)
mutect_snvs_table$in_mutect2[is.na(mutect_snvs_table$in_mutect2)] <- FALSE
in_mutect_table <- rbind(in_mutect_table, mutect_snvs_table)
}
in_mutect_table$in_mutect[in_mutect_table$in_mutect == TRUE] <- 'Good'
in_mutect_table$in_mutect[in_mutect_table$in_mutect == FALSE] <- 'Bad'
in_mutect_table$in_mutect2[in_mutect_table$in_mutect2 == TRUE] <- 'Good'
in_mutect_table$in_mutect2[in_mutect_table$in_mutect2 == FALSE] <- 'Bad'
mutect_tp <- 0
mutect_fp <- 0
mutect_tn <- 0
mutect_fn <- 0
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_tp = mutect_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Good') {
mutect_fp = mutect_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_fn = mutect_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect[i] == 'Bad') {
mutect_tn = mutect_tn + 1
}
}
mutect_sensitivity <- mutect_tp / (mutect_tp + mutect_fn)
mutect_specificity <- mutect_tn / (mutect_tn + mutect_fp)
mutect2_tp <- 0
mutect2_fp <- 0
mutect2_tn <- 0
mutect2_fn <- 0
for(i in 1:nrow(in_mutect_table)) {
if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect2[i] == 'Good') {
mutect2_tp = mutect2_tp + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect2[i] == 'Good') {
mutect2_fp = mutect2_fp + 1
}
else if (in_mutect_table$Judgement[i] == 'Good' & in_mutect_table$in_mutect2[i] == 'Bad') {
mutect2_fn = mutect2_fn + 1
}
else if (in_mutect_table$Judgement[i] == 'Bad' & in_mutect_table$in_mutect2[i] == 'Bad') {
mutect2_tn = mutect2_tn + 1
}
}
mutect2_sensitivity <- mutect2_tp / (mutect2_tp + mutect2_fn)
mutect2_specificity <- mutect2_tn / (mutect2_tn + mutect2_fp)
mutect_vs_mutect2_stats <- data.frame(matrix(nrow=2, ncol=2))
colnames(mutect_vs_mutect2_stats) <- c('MuTect', 'MuTect2')
rownames(mutect_vs_mutect2_stats) <- c('Specificity', 'Sensitivity')
mutect_vs_mutect2_stats['Specificity', 'MuTect'] <- mutect_specificity
mutect_vs_mutect2_stats['Sensitivity', 'MuTect'] <- mutect_sensitivity
mutect_vs_mutect2_stats['Specificity', 'MuTect2'] <- mutect2_specificity
mutect_vs_mutect2_stats['Sensitivity', 'MuTect2'] <- mutect2_sensitivity
kable(mutect_vs_mutect2_stats)
sessionInfo()
mutect_mutect2_counts <- data.frame(matrix(nrow=2, ncol=5))
colnames(mutect_mutect2_counts) <- c('Algorithm', 'TP', 'FP', 'TN', 'FN')
mutect_mutect2_counts$Algorithm <- c('MuTect', 'MuTect2')
mutect_mutect2_counts$TP <- c(mutect_tp, mutect2_tp)
mutect_mutect2_counts$FP <- c(mutect_fp, mutect2_fp)
mutect_mutect2_counts$TN <- c(mutect_tn, mutect2_tn)
mutect_mutect2_counts$FN <- c(mutect_fn, mutect2_fn)
mutect_mutect2_counts
kable(in_mutect_table %>% filter(Judgement == 'Good' & in_mutect == 'Bad'))
kable(in_mutect_table %>% filter(Judgement == 'Good' & in_mutect2 == 'Bad'))
kable(in_mutect_table %>% filter(Judgement == 'Good' & (in_mutect == 'Bad' | in_mutect2 == 'Bad')))
kable(in_mutect_table %>% filter(Judgement == 'Bad' & (in_mutect == 'Good' | in_mutect2 == 'Good')))
kable(in_mutect_table %>% dplyr::select(Sample, Judgement, Comment, in_mutect, in_mutect2) %>% filter(Judgement == 'Bad' & (in_mutect == 'Good' | in_mutect2 == 'Good')))
kable(
in_mutect_table %>%
dplyr::select(Sample, Judgement, Comment, in_mutect, in_mutect2) %>%
filter(Judgement == 'Good' & (in_mutect == 'Bad' | in_mutect2 == 'Bad'))
)
kable(
in_mutect_table %>%
dplyr::select(Sample, Judgement, Comment, in_mutect, in_mutect2) %>%
filter(Judgement == 'Bad' & (in_mutect == 'Good' | in_mutect2 == 'Good'))
)
50 / (50 + 8)
head(in_mutect_table)
in_mutect_table
ls()
